# .github/workflows/main.yml

name: Linux VPS Setup (Serveo)

on:
  push: {}
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Install OpenSSH server & client
      - name: Install SSH Server & Client
        run: |
          sudo apt update
          sudo apt install -y openssh-server openssh-client  # install both server and client :contentReference[oaicite:4]{index=4}

      # 2. Remove cloud-init override so it can't override our settings
      - name: Remove cloud-init SSH Override
        run: |
          sudo rm -f /etc/ssh/sshd_config.d/50-cloud-init.conf

      # 3. Configure SSH to allow password and root login
      - name: Configure SSH for Password Authentication
        run: |
          sudo sed -i 's/^#PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo sed -i 's/^#PermitRootLogin.*/PermitRootLogin yes/'       /etc/ssh/sshd_config
          # Create a high‑precedence drop‑in to be extra sure:
          echo -e "PasswordAuthentication yes\nPermitRootLogin yes" \
            | sudo tee /etc/ssh/sshd_config.d/01-github-actions.conf > /dev/null
          sudo systemctl restart ssh                            # restart daemon to apply changes :contentReference[oaicite:5]{index=5}

      # 4. Set a password for the built-in 'runner' user
      - name: Set Password for runner
        run: |
          echo "runner:P@ssw0rd!" | sudo chpasswd              # chpasswd reads user:pass from stdin :contentReference[oaicite:6]{index=6}

      # 5. Create a reverse SSH tunnel via Serveo & keep the runner alive
      - name: Create Serveo Reverse Tunnel and Sleep
        run: |
          nohup ssh -o StrictHostKeyChecking=no \
                    -o ServerAliveInterval=60 \
                    -o ServerAliveCountMax=3 \
                    -R 0:localhost:22 serveo.net &             # request random public port :contentReference[oaicite:7]{index=7}
          sleep infinity                                      # prevent job exit, keep tunnel open :contentReference[oaicite:8]{index=8}
